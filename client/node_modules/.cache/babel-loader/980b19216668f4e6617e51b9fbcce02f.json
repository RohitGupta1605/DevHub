{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\fsd\\\\fsd 2\\\\DevOPs\\\\client\\\\src\\\\components\\\\posts\\\\PostItem.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\nimport { connect } from 'react-redux';\n\nconst PostItem = ({\n  auth,\n  addLike,\n  removeLike,\n  deletePost,\n  showActions,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  }\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"post bg-white p-1 my-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/profile/${user}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          class: \"round-img\",\n          src: avatar,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"my-1\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"post-date\",\n        children: [\"Posted on \", /*#__PURE__*/_jsxDEV(Moment, {\n          format: \"DD/MM/YYYY\",\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), showActions && /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => addLike(_id),\n          type: \"button\",\n          class: \"btn btn-light\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-thumbs-up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this), ' ', likes.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: likes.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => removeLike(_id),\n          type: \"button\",\n          class: \"btn btn-light\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-thumbs-down\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/posts/${_id}`,\n          class: \"btn btn-primary\",\n          children: [\"Discussion\", ' ', comments.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"comment-count\",\n            children: comments.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), !auth.loading && user === auth.user._id && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => deletePost(_id),\n          type: \"button\",\n          class: \"btn btn-danger\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-times\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_c = PostItem;\nPostItem.defaultProps = {\n  showActions: true\n};\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"sources":["D:/fsd/fsd 2/DevOPs/client/src/components/posts/PostItem.js"],"names":["React","Fragment","PropTypes","Link","Moment","addLike","removeLike","deletePost","connect","PostItem","auth","showActions","post","_id","text","name","avatar","user","likes","comments","date","e","length","loading","defaultProps","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\nimport { connect } from 'react-redux';\n\nconst PostItem = ({\n    auth,\n    addLike,\n    removeLike,\n    deletePost,\n    showActions,\n    post: { _id, text, name, avatar, user, likes, comments, date },\n}) => {\n    return (\n        <div class='post bg-white p-1 my-1'>\n            <div>\n                <Link to={`/profile/${user}`}>\n                    <img class='round-img' src={avatar} alt='' />\n                    <h4>{name}</h4>\n                </Link>\n            </div>\n            <div>\n                <p class='my-1'>{text}</p>\n                <p class='post-date'>\n                    Posted on <Moment format='DD/MM/YYYY'>{date}</Moment>\n                </p>\n                {showActions && (\n                    <Fragment>\n                        <button\n                            onClick={(e) => addLike(_id)}\n                            type='button'\n                            class='btn btn-light'\n                        >\n                            <i class='fas fa-thumbs-up'></i>{' '}\n                            {likes.length > 0 && <span>{likes.length}</span>}\n                        </button>\n                        <button\n                            onClick={(e) => removeLike(_id)}\n                            type='button'\n                            class='btn btn-light'\n                        >\n                            <i class='fas fa-thumbs-down'></i>\n                        </button>\n                        <Link to={`/posts/${_id}`} class='btn btn-primary'>\n                            Discussion{' '}\n                            {comments.length > 0 && (\n                                <span class='comment-count'>\n                                    {comments.length}\n                                </span>\n                            )}\n                        </Link>\n                        {!auth.loading && user === auth.user._id && (\n                            <button\n                                onClick={(e) => deletePost(_id)}\n                                type='button'\n                                class='btn btn-danger'\n                            >\n                                <i class='fas fa-times'></i>\n                            </button>\n                        )}\n                    </Fragment>\n                )}\n            </div>\n        </div>\n    );\n};\n\nPostItem.defaultProps = {\n    showActions: true,\n};\n\nPostItem.propTypes = {\n    post: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n    addLike: PropTypes.func.isRequired,\n    removeLike: PropTypes.func.isRequired,\n    deletePost: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\n    PostItem\n);\n"]},"metadata":{},"sourceType":"module"}