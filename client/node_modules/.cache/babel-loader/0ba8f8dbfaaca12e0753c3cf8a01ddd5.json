{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { ADD_POST, DELETE_POST, GET_POSTS, POST_ERROR, UPDATE_LIKES, GET_POST, ADD_COMMENT, REMOVE_COMMENT } from './types'; //get posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add like\n\nexport const addLike = postId => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${postId}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        postId,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Remove like\n\nexport const removeLike = postId => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${postId}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        postId,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete post\n\nexport const deletePost = postId => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/posts/${postId}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: postId\n    });\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add post\n\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(`/api/posts`, formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //get post\n\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Add comment\n\nexport const addComment = (postId, formData) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete comment\n\nexport const deleteComment = (postId, commentId) => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId\n    });\n    dispatch(setAlert('Comment Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Rohit/Downloads/DevConnector-master/DevConnector-master/client/src/actions/post.js"],"names":["axios","setAlert","ADD_POST","DELETE_POST","GET_POSTS","POST_ERROR","UPDATE_LIKES","GET_POST","ADD_COMMENT","REMOVE_COMMENT","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","addLike","postId","put","likes","removeLike","deletePost","delete","addPost","formData","config","headers","post","getPost","id","addComment","deleteComment","commentId"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n    ADD_POST,\n    DELETE_POST,\n    GET_POSTS,\n    POST_ERROR,\n    UPDATE_LIKES,\n    GET_POST,\n    ADD_COMMENT,\n    REMOVE_COMMENT,\n} from './types';\n\n//get posts\nexport const getPosts = () => async (dispatch) => {\n    try {\n        const res = await axios.get('/api/posts');\n\n        dispatch({\n            type: GET_POSTS,\n            payload: res.data,\n        });\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n//Add like\nexport const addLike = (postId) => async (dispatch) => {\n    try {\n        const res = await axios.put(`/api/posts/like/${postId}`);\n\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: { postId, likes: res.data },\n        });\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n//Remove like\nexport const removeLike = (postId) => async (dispatch) => {\n    try {\n        const res = await axios.put(`/api/posts/unlike/${postId}`);\n\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: { postId, likes: res.data },\n        });\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n//Delete post\nexport const deletePost = (postId) => async (dispatch) => {\n    try {\n        const res = await axios.delete(`/api/posts/${postId}`);\n\n        dispatch({\n            type: DELETE_POST,\n            payload: postId,\n        });\n\n        dispatch(setAlert('Post Removed', 'success'));\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n//Add post\nexport const addPost = (formData) => async (dispatch) => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    };\n\n    try {\n        const res = await axios.post(`/api/posts`, formData, config);\n\n        dispatch({\n            type: ADD_POST,\n            payload: res.data,\n        });\n\n        dispatch(setAlert('Post Created', 'success'));\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n//get post\nexport const getPost = (id) => async (dispatch) => {\n    try {\n        const res = await axios.get(`/api/posts/${id}`);\n\n        dispatch({\n            type: GET_POST,\n            payload: res.data,\n        });\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n//Add comment\nexport const addComment = (postId, formData) => async (dispatch) => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    };\n\n    try {\n        const res = await axios.post(\n            `/api/posts/comment/${postId}`,\n            formData,\n            config\n        );\n\n        dispatch({\n            type: ADD_COMMENT,\n            payload: res.data,\n        });\n\n        dispatch(setAlert('Comment Added', 'success'));\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n\n//Delete comment\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\n    try {\n        const res = await axios.delete(\n            `/api/posts/comment/${postId}/${commentId}`\n        );\n\n        dispatch({\n            type: REMOVE_COMMENT,\n            payload: commentId,\n        });\n\n        dispatch(setAlert('Comment Removed', 'success'));\n    } catch (err) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status,\n            },\n        });\n    }\n};\n"]},"metadata":{},"sourceType":"module"}