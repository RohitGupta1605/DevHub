{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\fsd\\\\fsd 2\\\\DevOPs\\\\client\\\\src\\\\components\\\\profile\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileGithub from './ProfileGithub';\nimport ProfileEducation from './ProfileEducation';\nimport { getProfileById } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth,\n  match\n}) => {\n  _s();\n\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: profile === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profiles\",\n        className: \"btn btn-light\",\n        children: \"Back to Profiles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/edit-profile\",\n        className: \"btn btn-dark\",\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-grid my-1\",\n        children: [/*#__PURE__*/_jsxDEV(ProfileTop, {\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ProfileAbout, {\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-exp bg-white p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-primary\",\n            children: \"Experience\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), profile.experience.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: profile.experience.map(experience => /*#__PURE__*/_jsxDEV(ProfileExperience, {\n              experience: experience\n            }, experience._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"No experience credentials\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-edu bg-white p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-primary\",\n            children: \"Education\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), profile.education.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: profile.education.map(education => /*#__PURE__*/_jsxDEV(ProfileEducation, {\n              education: education\n            }, education._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"No education credentials\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), profile.githubusername && /*#__PURE__*/_jsxDEV(ProfileGithub, {\n          username: profile.githubusername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Profile;\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["D:/fsd/fsd 2/DevOPs/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","connect","Spinner","PropTypes","ProfileTop","ProfileAbout","ProfileExperience","ProfileGithub","ProfileEducation","getProfileById","Link","Profile","profile","loading","auth","match","params","id","isAuthenticated","user","_id","experience","length","map","education","githubusername","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileGithub from './ProfileGithub';\nimport ProfileEducation from './ProfileEducation';\nimport { getProfileById } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\nconst Profile = ({\n    getProfileById,\n    profile: { profile, loading },\n    auth,\n    match,\n}) => {\n    useEffect(() => {\n        getProfileById(match.params.id);\n    }, [getProfileById]);\n    return (\n        <Fragment>\n            {profile === null ? (\n                <Spinner></Spinner>\n            ) : (\n                <Fragment>\n                    <Link to='/profiles' className='btn btn-light'>\n                        Back to Profiles\n                    </Link>\n                    {auth.isAuthenticated &&\n                        auth.loading === false &&\n                        auth.user._id === profile.user._id && (\n                            <Link to='/edit-profile' className='btn btn-dark'>\n                                Edit Profile\n                            </Link>\n                        )}\n                    <div className='profile-grid my-1'>\n                        <ProfileTop profile={profile} />\n                        <ProfileAbout profile={profile} />\n                        <div className='profile-exp bg-white p-2'>\n                            <h2 className='text-primary'>Experience</h2>\n                            {profile.experience.length > 0 ? (\n                                <Fragment>\n                                    {profile.experience.map((experience) => (\n                                        <ProfileExperience\n                                            key={experience._id}\n                                            experience={experience}\n                                        />\n                                    ))}\n                                </Fragment>\n                            ) : (\n                                <h4>No experience credentials</h4>\n                            )}\n                        </div>\n                        <div className='profile-edu bg-white p-2'>\n                            <h2 className='text-primary'>Education</h2>\n                            {profile.education.length > 0 ? (\n                                <Fragment>\n                                    {profile.education.map((education) => (\n                                        <ProfileEducation\n                                            key={education._id}\n                                            education={education}\n                                        />\n                                    ))}\n                                </Fragment>\n                            ) : (\n                                <h4>No education credentials</h4>\n                            )}\n                        </div>\n                        {profile.githubusername && (\n                            <ProfileGithub username={profile.githubusername} />\n                        )}\n                    </div>\n                </Fragment>\n            )}\n        </Fragment>\n    );\n};\n\nProfile.propTypes = {\n    getProfileById: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    profile: state.profile,\n    auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n"]},"metadata":{},"sourceType":"module"}