{"ast":null,"code":"import { ADD_POST, DELETE_POST, GET_POSTS, POST_ERROR, UPDATE_LIKES, GET_POST, ADD_COMMENT, REMOVE_COMMENT } from '../actions/types';\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: payload,\n        loading: false\n      };\n\n    case GET_POST:\n      return { ...state,\n        post: payload,\n        loading: false\n      };\n\n    case ADD_POST:\n      return { ...state,\n        posts: [payload, ...state.posts],\n        loading: false\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case UPDATE_LIKES:\n      return { ...state,\n        posts: state.posts.map(post => post._id === payload.postId ? { ...post,\n          likes: payload.likes\n        } : post),\n        loading: false\n      };\n\n    case ADD_COMMENT:\n      return { ...state,\n        post: { ...state.post,\n          comments: payload\n        },\n        loading: false\n      };\n\n    case REMOVE_COMMENT:\n      return { ...state,\n        post: { ...state.post,\n          comments: state.post.comments.filter(comment => comment._id !== payload)\n        },\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Rohit/Downloads/DevConnector-master/DevConnector-master/client/src/reducers/post.js"],"names":["ADD_POST","DELETE_POST","GET_POSTS","POST_ERROR","UPDATE_LIKES","GET_POST","ADD_COMMENT","REMOVE_COMMENT","initialState","posts","post","loading","error","state","action","type","payload","filter","_id","map","postId","likes","comments","comment"],"mappings":"AAAA,SACIA,QADJ,EAEIC,WAFJ,EAGIC,SAHJ,EAIIC,UAJJ,EAKIC,YALJ,EAMIC,QANJ,EAOIC,WAPJ,EAQIC,cARJ,QASO,kBATP;AAWA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,IAAI,EAAE,IAFW;AAGjBC,EAAAA,OAAO,EAAE,IAHQ;AAIjBC,EAAAA,KAAK,EAAE;AAJU,CAArB;AAOA,eAAe,UAAUC,KAAK,GAAGL,YAAlB,EAAgCM,MAAhC,EAAwC;AACnD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACI,SAAKb,SAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHJ,QAAAA,KAAK,EAAEO,OAFJ;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKN,QAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHH,QAAAA,IAAI,EAAEM,OAFH;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKX,QAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEHJ,QAAAA,KAAK,EAAE,CAACO,OAAD,EAAU,GAAGH,KAAK,CAACJ,KAAnB,CAFJ;AAGHE,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKV,WAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CAAoBP,IAAD,IAAUA,IAAI,CAACQ,GAAL,KAAaF,OAA1C,CAFJ;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKR,UAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHD,QAAAA,KAAK,EAAEI,OAFJ;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKP,YAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYU,GAAZ,CAAiBT,IAAD,IACnBA,IAAI,CAACQ,GAAL,KAAaF,OAAO,CAACI,MAArB,GACM,EAAE,GAAGV,IAAL;AAAWW,UAAAA,KAAK,EAAEL,OAAO,CAACK;AAA1B,SADN,GAEMX,IAHH,CAFJ;AAOHC,QAAAA,OAAO,EAAE;AAPN,OAAP;;AASJ,SAAKL,WAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHH,QAAAA,IAAI,EAAE,EACF,GAAGG,KAAK,CAACH,IADP;AAEFY,UAAAA,QAAQ,EAAEN;AAFR,SAFH;AAMHL,QAAAA,OAAO,EAAE;AANN,OAAP;;AAQJ,SAAKJ,cAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHH,QAAAA,IAAI,EAAE,EACF,GAAGG,KAAK,CAACH,IADP;AAEFY,UAAAA,QAAQ,EAAET,KAAK,CAACH,IAAN,CAAWY,QAAX,CAAoBL,MAApB,CACLM,OAAD,IAAaA,OAAO,CAACL,GAAR,KAAgBF,OADvB;AAFR,SAFH;AAQHL,QAAAA,OAAO,EAAE;AARN,OAAP;;AAUJ;AACI,aAAOE,KAAP;AA9DR;AAgEH","sourcesContent":["import {\n    ADD_POST,\n    DELETE_POST,\n    GET_POSTS,\n    POST_ERROR,\n    UPDATE_LIKES,\n    GET_POST,\n    ADD_COMMENT,\n    REMOVE_COMMENT,\n} from '../actions/types';\n\nconst initialState = {\n    posts: [],\n    post: null,\n    loading: true,\n    error: {},\n};\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case GET_POSTS:\n            return {\n                ...state,\n                posts: payload,\n                loading: false,\n            };\n        case GET_POST:\n            return {\n                ...state,\n                post: payload,\n                loading: false,\n            };\n        case ADD_POST:\n            return {\n                ...state,\n                posts: [payload, ...state.posts],\n                loading: false,\n            };\n        case DELETE_POST:\n            return {\n                ...state,\n                posts: state.posts.filter((post) => post._id !== payload),\n                loading: false,\n            };\n        case POST_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false,\n            };\n        case UPDATE_LIKES:\n            return {\n                ...state,\n                posts: state.posts.map((post) =>\n                    post._id === payload.postId\n                        ? { ...post, likes: payload.likes }\n                        : post\n                ),\n                loading: false,\n            };\n        case ADD_COMMENT:\n            return {\n                ...state,\n                post: {\n                    ...state.post,\n                    comments: payload,\n                },\n                loading: false,\n            };\n        case REMOVE_COMMENT:\n            return {\n                ...state,\n                post: {\n                    ...state.post,\n                    comments: state.post.comments.filter(\n                        (comment) => comment._id !== payload\n                    ),\n                },\n                loading: false,\n            };\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}